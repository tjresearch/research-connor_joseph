{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Progressing PyTorch_CNN_1","provenance":[{"file_id":"1WkmQrrd3kKYei0wBNdfoo14pefhfv3Ad","timestamp":1570802508451},{"file_id":"1J6O36fiY3O5urUqGxqGSXj6_t6SaLM4a","timestamp":1570760183139}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"s0u3cBS2SnD6","colab_type":"code","colab":{}},"source":["# importing the libraries\n","import pandas as pd\n","import numpy as np\n","\n","# for reading and displaying images\n","from skimage.io import imread\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","# for creating validation set\n","from sklearn.model_selection import train_test_split\n","\n","# for evaluating the model\n","from sklearn.metrics import accuracy_score\n","from tqdm import tqdm # if you wrap this with an iterable, it will show a nice progress bar. That's all this is used for, though. \n","\n","# PyTorch libraries and modules\n","import torch\n","from torch.autograd import Variable\n","from torch.nn import Linear, ReLU, CrossEntropyLoss, Sequential, Conv2d, MaxPool2d, Module, Softmax, BatchNorm2d, Dropout\n","from torch.optim import Adam, SGD\n","\n","import numpy as np\n","from PIL import Image"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"XYUYU0rjUybW","colab_type":"code","outputId":"a9ef334b-5b59-420d-ec7f-f3abace12416","executionInfo":{"status":"ok","timestamp":1571242891040,"user_tz":240,"elapsed":200415,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":124}},"source":["from google.colab import drive\n","drive.mount('/gdrive', force_remount = True)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdocs.test%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.photos.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fpeopleapi.readonly&response_type=code\n","\n","Enter your authorization code:\n","··········\n","Mounted at /gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"s4DuBLqz6iIz","colab_type":"code","colab":{}},"source":["# !fusermount -u drive\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"IoGf3biw8UDJ","colab_type":"code","colab":{}},"source":["# !google-drive-ocamlfuse drive"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"eYlhn0D7UyaR","colab_type":"code","outputId":"8122fcf8-b69d-40c5-eba6-95f18b595011","executionInfo":{"status":"ok","timestamp":1571244926677,"user_tz":240,"elapsed":156,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["cd .."],"execution_count":0,"outputs":[{"output_type":"stream","text":["/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"sBLghMUFZBnA","colab_type":"code","outputId":"aa253eef-8e29-4875-fef9-7315b0e334cc","executionInfo":{"status":"ok","timestamp":1571244930581,"user_tz":240,"elapsed":1414,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["cd 'gdrive/My Drive/Senior Year/5th: Senior Research Project with Connor/Dataset/finished'\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/gdrive/My Drive/Senior Year/5th: Senior Research Project with Connor/Dataset/finished\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ydzueF9ZZNja","colab_type":"code","outputId":"9ab1eb9f-3676-4f09-ae48-cabb8267de73","executionInfo":{"status":"ok","timestamp":1571244933365,"user_tz":240,"elapsed":1035,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":69}},"source":["ls"],"execution_count":0,"outputs":[{"output_type":"stream","text":["annotations_earthquake.csv  annotations_flooding.gsheet   \u001b[0m\u001b[01;34mgoogle_images\u001b[0m/\n","annotations_fire.csv        annotations_hurricane.csv\n","annotations_flooding.csv    annotations_hurricane.gsheet\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yHTm8Xjyli8r","colab_type":"code","colab":{}},"source":["# def add_dis_type(dis_df):\n","#   \"\"\"\n","#   :dis_df: an annotations .csv file read into a dataframe\n","#   :return: dis_df with a new column \n","#   \"\"\""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"lx3ICbhhVCB_","colab_type":"code","colab":{}},"source":["flood_anns = pd.read_csv('annotations_flooding.csv')\n","hurricane_anns = pd.read_csv('annotations_hurricane.csv')\n","fire_anns = pd.read_csv('annotations_fire.csv')\n","earthquake_anns = pd.read_csv('annotations_earthquake.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"z9z4qhtCWemV","colab_type":"code","outputId":"68e57c93-6b20-484b-ed3f-512632da612a","executionInfo":{"status":"ok","timestamp":1571244941180,"user_tz":240,"elapsed":206,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["hurricane_anns.dropna(inplace=True)\n","hurricane_anns.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>photo_ID</th>\n","      <th>earthquake</th>\n","      <th>flooding</th>\n","      <th>fire</th>\n","      <th>hurricane</th>\n","      <th>bridge</th>\n","      <th>building damage</th>\n","      <th>lava</th>\n","      <th>roads</th>\n","      <th>utilities</th>\n","      <th>snow</th>\n","      <th>vegetation (low)</th>\n","      <th>vegetation (high)</th>\n","      <th>river</th>\n","      <th>disaster_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>google_images/hurricane_aerial_resized/0000.jpg</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>google_images/hurricane_aerial_resized/0001.jpg</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>google_images/hurricane_aerial_resized/0002.jpg</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>google_images/hurricane_aerial_resized/0003.jpg</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>google_images/hurricane_aerial_resized/0004.jpg</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                          photo_ID  ...  disaster_type\n","0  google_images/hurricane_aerial_resized/0000.jpg  ...              4\n","1  google_images/hurricane_aerial_resized/0001.jpg  ...              4\n","2  google_images/hurricane_aerial_resized/0002.jpg  ...              4\n","3  google_images/hurricane_aerial_resized/0003.jpg  ...              4\n","4  google_images/hurricane_aerial_resized/0004.jpg  ...              4\n","\n","[5 rows x 15 columns]"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"EdIyqOtIWjNf","colab_type":"code","colab":{}},"source":["fire_anns.dropna(inplace=True)\n","fire_anns.reset_index(inplace=True)\n","\n","# img = Image.open('testrgba.png')\n","# array = np.array(img)\n","# print(array.shape) "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"-kwOLy03nKvA","colab_type":"code","outputId":"02579976-42da-439d-ec00-f636ad9c9ffd","executionInfo":{"status":"ok","timestamp":1571161371275,"user_tz":240,"elapsed":138,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["fire_anns.shape[0]"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["100"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"RByp89BlqEdU","colab_type":"code","outputId":"3119f081-ab45-4701-f9f6-f69ef0f3f6ae","executionInfo":{"status":"ok","timestamp":1571161373175,"user_tz":240,"elapsed":141,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["fire_anns.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>photo_ID</th>\n","      <th>earthquake</th>\n","      <th>flooding</th>\n","      <th>fire</th>\n","      <th>hurricane</th>\n","      <th>bridge</th>\n","      <th>building damage</th>\n","      <th>lava</th>\n","      <th>roads</th>\n","      <th>utilities</th>\n","      <th>snow</th>\n","      <th>vegetation (low)</th>\n","      <th>vegetation (high)</th>\n","      <th>river</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>google_images\\fire_aerial\\0.jpg</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>google_images\\fire_aerial\\1.jpg</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>google_images\\fire_aerial\\2.jpg</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7</td>\n","      <td>google_images\\fire_aerial\\3.jpg</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9</td>\n","      <td>google_images\\fire_aerial\\4.jpg</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   index                         photo_ID  ...  vegetation (high)  river\n","0      1  google_images\\fire_aerial\\0.jpg  ...                0.0    0.0\n","1      3  google_images\\fire_aerial\\1.jpg  ...                0.0    1.0\n","2      5  google_images\\fire_aerial\\2.jpg  ...                0.0    0.0\n","3      7  google_images\\fire_aerial\\3.jpg  ...                0.0    0.0\n","4      9  google_images\\fire_aerial\\4.jpg  ...                1.0    0.0\n","\n","[5 rows x 15 columns]"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"Yetl9VcvnMC_","colab_type":"code","colab":{}},"source":["# for i in range(10):\n","#   img = Image.open(hurricane_anns.loc[i, 'photo_ID'])\n","#   img_arr = np.array(img)\n","#   print(f\"Image {i}\")\n","#   print(img_arr)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"kf7H8P6KobNK","colab_type":"code","colab":{}},"source":["# cd .."],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ckx-YJussM4n","colab_type":"code","outputId":"e8c9f035-f07f-4c0f-e241-2675b48487d1","executionInfo":{"status":"ok","timestamp":1571161603811,"user_tz":240,"elapsed":773,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":72}},"source":["ls"],"execution_count":0,"outputs":[{"output_type":"stream","text":["annotations_earthquake.csv  annotations_flooding.gsheet   \u001b[0m\u001b[01;34mgoogle_images\u001b[0m/\n","annotations_fire.csv        annotations_hurricane.csv\n","annotations_flooding.csv    annotations_hurricane.gsheet\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WIHTpZB8Ixdj","colab_type":"code","outputId":"465cd1a6-a704-46b4-a188-df3dc7f49b51","executionInfo":{"status":"error","timestamp":1571162060016,"user_tz":240,"elapsed":310784,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":248}},"source":["# loading training images\n","train_img = []\n","for img_name in tqdm(hurricane_anns['photo_ID']):\n","    # defining the image path\n","    image_path = str(img_name)\n","    # reading the image\n","    img = imread(image_path, as_gray=True)\n","    # normalizing the pixel values\n","    img /= 255.0\n","    # converting the type of pixel to float 32\n","    img = img.astype('float32')\n","    # appending the image into the list\n","    train_img.append(img)\n","    \n","# for img_name in tqdm(hurricane_anns['photo_ID']):\n","#     # defining the image path\n","#     image_path = str(img_name) + '.jpg'\n","#     # reading the image\n","#     img = imread(image_path, as_gray=True)\n","#     # normalizing the pixel values\n","#     img /= 255.0 \n","#     # converting the type of pixel to float 32\n","#     img = img.astype('float32')\n","#     # appending the image into the list\n","#     train_img.append(img)\n","\n","# for img_name in tqdm(fire_anns['photo_ID']):FileNotFoundError: No such file: '/gdrive/My Drive/Senior Year/5th: Senior Research Project with Connor/Dataset/finished/google_images/flooding_aerial_resized/0000.jpg'\n","#     # defining the image path\n","#     image_path = str(img_name) + '.jpg'\n","#     # reading the image\n","#     img = imread(image_path, as_gray=True)\n","#     # normalizing the pixel values\n","#     img /= 255.0\n","#     # converting the type of pixel to float 32\n","#     img = img.astype('float32')\n","#     # appending the image into the list\n","#     train_img.append(img)\n","\n","# for img_name in tqdm(earthquake_anns['photo_ID']):\n","#     # defining the image path\n","#     image_path = str(img_name) + '.jpg'\n","#     # reading the image\n","#     img = imread(image_path, as_gray=True)\n","#     # normalizing the pixel values\n","#     img /= 255.0\n","#     # converting the type of pixel to float 32\n","#     img = img.astype('float32')\n","#     # appending the image into the list\n","#     train_img.append(img)\n","\n","# converting the list to numpy array\n","train_x = np.array(train_img)\n","# defining the target\n","train_y = train['label'].values\n","train_x.shape"],"execution_count":0,"outputs":[{"output_type":"stream","text":["100%|██████████| 1045/1045 [05:10<00:00,  3.79it/s]\n"],"name":"stderr"},{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-3c6c7e3856e8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     51\u001b[0m \u001b[0mtrain_x\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_img\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m \u001b[0;31m# defining the target\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 53\u001b[0;31m \u001b[0mtrain_y\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'label'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     54\u001b[0m \u001b[0mtrain_x\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'train' is not defined"]}]},{"cell_type":"code","metadata":{"id":"I6frlFlXj2B6","colab_type":"code","colab":{}},"source":["# train_img"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"c25_PP-IKout","colab_type":"code","outputId":"2d11ec9a-54a9-4915-8a29-cef784f32517","executionInfo":{"status":"ok","timestamp":1570803195533,"user_tz":240,"elapsed":3104,"user":{"displayName":"Joseph Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAU9gf_KMxb9yZ_FFK6WkF_QLqadjO1m4Z0uDLcNA=s64","userId":"10271014612497204666"}},"colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["ls"],"execution_count":0,"outputs":[{"output_type":"stream","text":["annotations_earthquake.csv  annotations_flooding.gsheet   \u001b[0m\u001b[01;34mgoogle_images\u001b[0m/\n","annotations_fire.csv        annotations_hurricane.csv\n","annotations_flooding.csv    annotations_hurricane.gsheet\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5MPY_gh01c2X","colab_type":"code","colab":{}},"source":["class Net(Module):   \n","    def __init__(self):\n","        super(Net, self).__init__()\n","\n","        self.cnn_layers = Sequential(\n","            # Defining a 2D convolution layer\n","            Conv2d(1, 4, kernel_size=3, stride=1, padding=1),\n","            BatchNorm2d(4),\n","            ReLU(inplace=True),\n","            MaxPool2d(kernel_size=2, stride=2),\n","            # Defining another 2D convolution layer\n","            Conv2d(4, 4, kernel_size=3, stride=1, padding=1),\n","            BatchNorm2d(4),\n","            ReLU(inplace=True),\n","            MaxPool2d(kernel_size=2, stride=2),\n","        )\n","1Multivariable Calculus Abbreviated Notes Dr. Osborne The  purpose  of  this  set  of  notes  is  to  explain  the  meaning,  uses,  and  applications  of  the  differential  of  a  function  of  multiple  variables.    I  will  try  to  be  as  short  as  possible,  and  I  hope  that these notes are useful to you. Functions of Multiple Variables A function of multiple variables is exactly what it seems like it is: given an ordered set of numbers,  the  function  returns  a  single  value.    Examples  include  22(, )  35  sinfxyxxyxy  ,  22(, )53gxyxy , and 22   26(, , )32hxyzxyz .  The domain of a funct\n","        self.linear_layers = Sequential(\n","            Linear(4 * 7 * 7, 10)\n","        )\n","\n","    # Defining the forward pass    \n","    def forward(self, x):\n","        x = self.cnn_layers(x)\n","        x = x.view(x.size(0), -1)\n","        x = self.linear_layers(x)\n","        return x"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"k0F6g0VxpOM1","colab_type":"code","outputId":"fdb41ddf-7eff-4768-9939-32a03d8a1742","executionInfo":{"status":"ok","timestamp":1570765902323,"user_tz":240,"elapsed":3214,"user":{"displayName":"Connor Grimberg","photoUrl":"","userId":"01720205661219630631"}},"colab":{"base_uri":"https://localhost:8080/","height":272}},"source":["# defining the model\n","model = Net()\n","# defining the optimizer\n","optimizer = Adam(model.parameters(), lr=0.07)\n","# defining the loss function\n","criterion = CrossEntropyLoss()\n","# checking if GPU is available\n","if torch.cuda.is_available():\n","    model = model.cuda()\n","    criterion = criterion.cuda()\n","    \n","print(model)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Net(\n","  (cnn_layers): Sequential(\n","    (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","    (1): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (2): ReLU(inplace=True)\n","    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","    (4): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n","    (5): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (6): ReLU(inplace=True)\n","    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","  )\n","  (linear_layers): Sequential(\n","    (0): Linear(in_features=196, out_features=10, bias=True)\n","  )\n",")\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"RQ5u2EPYq6_d","colab_type":"code","colab":{}},"source":["def train(epoch):\n","    model.train()\n","    tr_loss = 0\n","    # getting the training set\n","    x_train, y_train = Variable(train_x), Variable(train_y)\n","    # getting the validation set\n","    x_val, y_val = Variable(val_x), Variable(val_y)\n","    # converting the data into GPU format\n","    if torch.cuda.is_available():\n","        x_train = x_train.cuda()\n","        y_train = y_train.cuda()\n","        x_val = x_val.cuda()\n","        y_val = y_val.cuda()\n","\n","    # clearing the Gradients of the model parameters\n","    optimizer.zero_grad()\n","    \n","    # prediction for training and validation set\n","    output_train = model(x_train)\n","    output_val = model(x_val)\n","\n","    # computing the training and validation loss\n","    loss_train = criterion(output_train, y_train)\n","    loss_val = criterion(output_val, y_val)\n","    train_losses.append(loss_train)\n","    val_losses.append(loss_val)\n","\n","    # computing the updated weights of all the model parameters\n","    loss_train.backward()\n","    optimizer.step()\n","    tr_loss = loss_train.item()\n","    if epoch%2 == 0:\n","        # printing the validation loss\n","        print('Epoch : ',epoch+1, '\\t', 'loss :', loss_val)"],"execution_count":0,"outputs":[]}]}